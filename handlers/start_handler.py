from aiogram import types
from aiogram.types import FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.filters.command import Command
from loader import bot, dp
from utils.db_utils import get_user_by_id
from handlers.main_menu import main_menu

# –û–±—â–∞—è –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
common_caption = """
<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MatrixVPN üõ°Ô∏è</b> ‚Äî –≤–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è <b>—Å–≤–æ–±–æ–¥—ã</b> –∏ <b>–ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏</b> –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ üåê

üîµ   <b><i>–ü—Ä–∏–º–µ—à—å —Å–∏–Ω—é—é —Ç–∞–±–ª–µ—Ç–∫—É</i></b> ‚Äî –∏ <b>—Å–∫–∞–∑–∫–µ –∫–æ–Ω–µ—Ü</b>.
–¢—ã –ø—Ä–æ—Å–Ω–µ—à—å—Å—è –≤ —Å–≤–æ–µ–π –ø–æ—Å—Ç–µ–ª–∏ –∏ –ø–æ–≤–µ—Ä–∏—à—å, —á—Ç–æ —ç—Ç–æ –±—ã–ª <i>—Å–æ–Ω</i>.

üî¥   <b><i>–ü—Ä–∏–º–µ—à—å –∫—Ä–∞—Å–Ω—É—é —Ç–∞–±–ª–µ—Ç–∫—É</i></b> ‚Äî –≤–æ–π–¥–µ—à—å –≤ <b>—Å—Ç—Ä–∞–Ω—É —á—É–¥–µ—Å</b>.

–Ø –ø–æ–∫–∞–∂—É —Ç–µ–±–µ, –≥–ª—É–±–æ–∫–∞ –ª–∏ –∫—Ä–æ–ª–∏—á—å—è –Ω–æ—Ä–∞. üêá
"""

# –ü–æ–¥–ø–∏—Å—å, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–∞—è –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞
after_caption = """
<i> ‚ü≥ –û–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ—Ö–æ–¥–∞</i> –≤ <b>—Ä–µ–∞–ª—å–Ω—ã–π –º–∏—Ä</b>.

<b>–û–±—Ä–∞—Ç–Ω–æ–≥–æ –ø—É—Ç–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç...</b> üêá

‚ìò –ó–∞–ø—Ä–æ—Å —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç ‚åõ
"""


@dp.message(Command("start"))
async def start_handler(
    message: types.Message = None, user_id: int = None, state: FSMContext = None
) -> None:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        await state.clear()
    except:
        pass
    user_id = message.from_user.id if user_id is None else user_id
    user = await get_user_by_id(user_id)

    if user:
        status = user[2]

        if status == "accepted":
            await main_menu(user_id=user_id)

        elif status == "denied":
            markup = types.InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        types.InlineKeyboardButton(
                            text="–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø —Å–Ω–æ–≤–∞",
                            callback_data="request_access",
                        )
                    ]
                ]
            )
            await bot.send_message(
                user_id,
                text="–í–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø —Å–Ω–æ–≤–∞.",
                reply_markup=markup,
            )

        elif status == "pending":
            markup = types.InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        types.InlineKeyboardButton(
                            text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ VPN", callback_data="more"
                        )
                    ]
                ]
            )
            await bot.send_animation(
                chat_id=user_id,
                animation=FSInputFile("assets/pending.gif"),
                caption=common_caption.partition("\n")[0] + after_caption,
                reply_markup=markup,
                parse_mode="HTML",
            )

        elif status == "expired":
            markup = types.InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        types.InlineKeyboardButton(
                            text="üî¥   –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø",
                            callback_data="request_access",
                        )
                    ],
                    [
                        types.InlineKeyboardButton(
                            text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ VPN üìú", callback_data="more"
                        )
                    ],
                ]
            )
            await bot.send_photo(
                chat_id=user_id,
                photo=FSInputFile("assets/matrix.png"),
                caption=common_caption,
                reply_markup=markup,
                parse_mode="HTML",
            )
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø
        markup = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="üî¥   –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="request_access"
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ VPN üìú", callback_data="more"
                    )
                ],
            ]
        )
        await bot.send_photo(
            chat_id=user_id,
            photo=FSInputFile("assets/matrix.png"),
            caption=common_caption,
            reply_markup=markup,
            parse_mode="HTML",
        )
