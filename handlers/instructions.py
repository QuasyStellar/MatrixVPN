from utils.db_utils import get_user_by_id
from utils.messages_manage import non_authorized
from aiogram.types import FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram import types
from loader import dp


@dp.callback_query(lambda call: call.data in ("az_faq", "gb_faq"))
async def instructions(call: types.CallbackQuery, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º VPN"""
    user = await get_user_by_id(call.from_user.id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø
    if user and user[2] == "accepted":
        markup = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="üîê OpenVPN",
                        web_app=types.WebAppInfo(
                            url="https://teletype.in/@esc_matrix/Matrix_VPN_OVPN_Instruction"
                        ),
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="‚ö° WireGuard/AmnesiaWG",
                        web_app=types.WebAppInfo(
                            url="https://teletype.in/@esc_matrix/Matrix_VPN_OVPN_Instruction"
                        ),
                    )
                ],
                [
                    types.InlineKeyboardButton(
                        text="‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"choose_proto_{call.data[:2]}"
                    )
                ],
            ]
        )
        await call.message.edit_media(
            media=types.InputMediaPhoto(
                media=FSInputFile("assets/instructions.png"),
                caption="‚ìò <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ üìñ</b>",
                parse_mode="HTML",
            ),
            reply_markup=markup,
        )

    else:
        await non_authorized(call.from_user.id, call.message.message_id)
