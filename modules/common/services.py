import random
from aiogram import types
from services.db_operations import get_user_by_id
from core.bot import bot
from aiogram.exceptions import TelegramAPIError
from config.settings import SUPPORT_ID
from pytils import numeral
from babel.dates import format_datetime
import pytz
from datetime import datetime
from services.messages_manage import non_authorized
import logging

logger = logging.getLogger(__name__)

quotes = [
    "–í—Å—Ç–∞–≤–∞–π, –¢—Ä–∏–Ω–∏—Ç–∏. –í—Å—Ç–∞–≤–∞–π! –ù–∞–¥–æ –≤—Å—Ç–∞—Ç—å!",
    "–ü—Ä–æ—Å–Ω–∏—Å—å, –ù–µ–æ‚Ä¶",
    "–¢—ã —É–≤—è–∑ –≤ –ú–∞—Ç—Ä–∏—Ü–µ.",
    "–°–ª–µ–¥—É–π –∑–∞ –±–µ–ª—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.",
    "–¢—É–∫-—Ç—É–∫, –ù–µ–æ.",
    "–≠—Ç—É –¥–æ—Ä–æ–≥—É —Ç—ã –≤–∏–¥–µ–ª. –ò –∑–Ω–∞–µ—à—å, –∫—É–¥–∞ –æ–Ω–∞ –≤–µ–¥—ë—Ç. –¢–µ–±–µ —Ç—É–¥–∞ –Ω–µ –Ω—É–∂–Ω–æ, —è —É–≤–µ—Ä–µ–Ω–∞.",
    "–ù–µ–æ, —è –±–æ–ª—å—à–µ –Ω–µ –±–æ—é—Å—å. –ü—Ä–æ–≤–∏–¥–∏—Ü–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–ª–∞ –º–Ω–µ, —á—Ç–æ —è –¥–æ–ª–∂–Ω–∞ –≤–ª—é–±–∏—Ç—å—Å—è. –ò –º–æ–π –ª—é–±–∏–º—ã–π ‚Äî –ò–∑–±—Ä–∞–Ω–Ω—ã–π. –ê –∑–Ω–∞—á–∏—Ç, —Ç—ã –Ω–µ —É–º—Ä—ë—à—å.",
    "–î–æ–≥–∞–¥—ã–≤–∞—é—Å—å, —Å–µ–π—á–∞—Å —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –ê–ª–∏—Å–æ–π, –ø–∞–¥–∞—é—â–µ–π –≤ –∫—Ä–æ–ª–∏—á—å—é –Ω–æ—Ä—É‚Ä¶",
    "–í—Ä–µ–º—è –≤—Å–µ–≥–¥–∞ –ø—Ä–æ—Ç–∏–≤ –Ω–∞—Å.",
    "–°–ª—É—á–∞–ª–æ—Å—å –≤–∏–¥–µ—Ç—å —Å–æ–Ω, –∫–∞–∑–∞–≤—à–∏–π—Å—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é? –ß—Ç–æ, –µ—Å–ª–∏ –±—ã —Ç—ã –Ω–µ —Å–º–æ–≥ –ø—Ä–æ—Å–Ω—É—Ç—å—Å—è? –ö–∞–∫ –±—ã —Ç—ã —É–∑–Ω–∞–ª, —á—Ç–æ —Ç–∞–∫–æ–µ —Å–æ–Ω, –∞ —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å?",
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ–∞–ª—å–Ω—ã–π –º–∏—Ä.",
    "–ß—Ç–æ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å? –ò –∫–∞–∫ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –µ—ë? –ï—Å—Ç—å –Ω–∞–±–æ—Ä –æ—â—É—â–µ–Ω–∏–π, –∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö, –æ—Å—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö, –æ–±–æ–Ω—è—Ç–µ–ª—å–Ω—ã—Ö ‚Äî —ç—Ç–æ —Å–∏–≥–Ω–∞–ª—ã —Ä–µ—Ü–µ–ø—Ç–æ—Ä–æ–≤, —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –∏–º–ø—É–ª—å—Å—ã, –≤–æ—Å–ø—Ä–∏–Ω—è—Ç—ã–µ –º–æ–∑–≥–æ–º.",
    "–ß—Ç–æ —Ç–∞–∫–æ–µ ¬´–ú–∞—Ç—Ä–∏—Ü–∞¬ª? –î–∏–∫—Ç–∞—Ç.",
    "–Ø –Ω–µ –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ –±—É–¥–µ—Ç –ª–µ–≥–∫–æ, –ù–µ–æ. –Ø –ª–∏—à—å –æ–±–µ—â–∞–ª, —á—Ç–æ —ç—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∞–≤–¥–∞.",
    "–¢—ã –¥—É–º–∞–µ—à—å, —á—Ç–æ –º–æ—è —Ä–µ–∞–∫—Ü–∏—è –∏–ª–∏ —Å–∏–ª–∞ –∑–¥–µ—Å—å, –≤ —ç—Ç–æ–º –º–∏—Ä–µ, –∑–∞–≤–∏—Å—è—Ç –æ—Ç –º—É—Å–∫—É–ª–æ–≤? –¢—ã –¥—É–º–∞–µ—à—å, —á—Ç–æ –¥—ã—à–∏—à—å –≤–æ–∑–¥—É—Ö–æ–º —Å–µ–π—á–∞—Å?‚Ä¶",
    "–¢—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–µ–µ. –ù–µ –¥—É–º–∞–π, —á—Ç–æ —Ç—ã –±—ã—Å—Ç—Ä ‚Äî –∑–Ω–∞–π, —á—Ç–æ —Ç—ã –±—ã—Å—Ç—Ä. –•–≤–∞—Ç–∏—Ç –ø–æ–ø—ã—Ç–æ–∫. –ù–µ –ø—ã—Ç–∞–π—Å—è —É–¥–∞—Ä–∏—Ç—å –º–µ–Ω—è –∏ –ø—Ä–æ—Å—Ç–æ —É–¥–∞—Ä—å –º–µ–Ω—è.",
    "–ü–æ—Ä–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Ç–≤–æ–π —Ä–∞–∑—É–º. –ù–æ —è –º–æ–≥—É –ª–∏—à—å —É–∫–∞–∑–∞—Ç—å –¥–≤–µ—Ä—å. –¢—ã —Å–∞–º –¥–æ–ª–∂–µ–Ω –≤—ã–π—Ç–∏ –Ω–∞ –≤–æ–ª—é. ‚Ä¶ –û—Ç–≤–ª–µ–∫–∏—Å—å –æ—Ç –≤—Å–µ–≥–æ, –ù–µ–æ. –°—Ç—Ä–∞—Ö, –Ω–µ–≤–µ—Ä–∏–µ, —Å–æ–º–Ω–µ–Ω–∏—è –æ—Ç–±—Ä–æ—Å—å ‚Äî –æ—á–∏—Å—Ç–∏ —Å–≤–æ–π —Ä–∞–∑—É–º.",
    "–†–µ–∞–ª—å–Ω–æ —Ç–æ, —á—Ç–æ –æ—Å–æ–∑–Ω–∞–µ—à—å.",
    "–ú–∞—Ç—Ä–∏—Ü–∞ ‚Äî —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞. –°–∏—Å—Ç–µ–º–∞ ‚Äî –µ—Å—Ç—å –Ω–∞—à –≤—Ä–∞–≥. –ù–æ –∫–æ–≥–¥–∞ —Ç—ã –≤ –Ω–µ–π ‚Äî –æ–≥–ª—è–Ω–∏—Å—å, –∫–æ–≥–æ —Ç—ã –≤–∏–¥–∏—à—å? –ë–∏–∑–Ω–µ—Å–º–µ–Ω–æ–≤, —É—á–∏—Ç–µ–ª–µ–π, –∞–¥–≤–æ–∫–∞—Ç–æ–≤, —Ä–∞–±–æ—Ç—è–≥, –æ–±—ã—á–Ω—ã—Ö –ª—é–¥–µ–π, —á–µ–π —Ä–∞–∑—É–º –º—ã –∏ —Å–ø–∞—Å–∞–µ–º.",
    "–†–∞–Ω–æ –∏–ª–∏ –ø–æ–∑–¥–Ω–æ —Ç—ã –ø–æ–π–º—ë—à—å, –∫–∞–∫ –∏ —è. –ó–Ω–∞—Ç—å –ø—É—Ç—å –∏ –ø—Ä–æ–π—Ç–∏ –µ–≥–æ ‚Äî –Ω–µ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ.",
    "–û–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç –≤–µ—Ä–∏—Ç—å.",
    "–ü—Ä–∏—Å—Ç–µ–≥–Ω–∏ —Ä–µ–º–µ–Ω—å, –î–æ—Ä–æ—Ç–∏, –∏ —Å–∫–∞–∂–∏ –ö–∞–Ω–∑–∞—Å—É: ¬´–ü—Ä–æ—Å—Ç–∏ –∏ –ø—Ä–æ—â–∞–π¬ª.",
    "–í—Å–µ –º—ã –ø–∞–¥–∞–ª–∏ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑.",
    "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ–ª—É—á–∞–µ–º–æ–π –∏–∑ –ú–∞—Ç—Ä–∏—Ü—ã, –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ, —á–µ–º —Ç—ã –º–æ–∂–µ—à—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å. –¢—ã –ø—Ä–∏–≤—ã–∫–Ω–µ—à—å –∫ —ç—Ç–æ–º—É.",
    "–Ø –∑–Ω–∞—é, –æ–Ω –Ω–µ –Ω–∞—Å—Ç–æ—è—â–∏–π, –∏ –∫–æ–≥–¥–∞ —è –ø–æ–ª–æ–∂—É –µ–≥–æ –≤ —Ä–æ—Ç, –≤–∫—É—Å –≤–Ω—É—à–∏—Ç –º–Ω–µ –ú–∞—Ç—Ä–∏—Ü–∞. –ó–Ω–∞–µ—Ç–µ, —á—Ç–æ —è —Ä–µ—à–∏–ª –∑–∞ —Ç–µ –¥–µ—Å—è—Ç—å –ª–µ—Ç, —á—Ç–æ —Å–≤–æ–±–æ–¥–µ–Ω? –°—á–∞—Å—Ç—å–µ –≤ –Ω–µ–≤–µ–¥–µ–Ω–∏–∏.",
    "–í—Å—ë, —á—Ç–æ —è –¥–µ–ª–∞–ª ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ –æ–Ω –≥–æ–≤–æ—Ä–∏–ª –º–Ω–µ –¥–µ–ª–∞—Ç—å.",
    "–ö–∞–∫ –≤–∏–¥–∏—Ç–µ, –º—ã –∑–∞ –í–∞–º–∏ –¥–∞–≤–Ω–µ–Ω—å–∫–æ –Ω–∞–±–ª—é–¥–∞–µ–º, –º–∏—Å—Ç–µ—Ä –ê–Ω–¥–µ—Ä—Å–æ–Ω.",
    "–í–∞–º —Å–ª—É—á–∞–ª–æ—Å—å –ª—é–±–æ–≤–∞—Ç—å—Å—è –ú–∞—Ç—Ä–∏—Ü–µ–π? –ï—ë –≥–µ–Ω–∏–∞–ª—å–Ω–æ—Å—Ç—å—é‚Ä¶",
    "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ—Å—ã–ª–∞–π—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞ –¥–µ–ª–∞—Ç—å —Ä–∞–±–æ—Ç—É –º–∞—à–∏–Ω—ã.",
    "–Ø —Ö–æ—á—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ç–µ–æ—Ä–∏–µ–π, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–¥–∞–≤–Ω–æ —Å–æ–∑–¥–∞–ª. –Ø –∑–∞–Ω–∏–º–∞–ª—Å—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –≤–∏–¥–æ–≤ –∏ –ø—Ä–∏—à—ë–ª –∫ –≤—ã–≤–æ–¥—É, —á—Ç–æ –≤—ã ‚Äî –Ω–µ –º–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–∏–µ.",
    "–Ø —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥‚Ä¶ –Ω–µ–Ω–∞–≤–∏–∂—É. –≠—Ç–æ—Ç –∑–æ–æ–ø–∞—Ä–∫, —Ç—é—Ä—å–º—É, —ç—Ç—É —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å ‚Äî –Ω–∞–∑—ã–≤–∞–π—Ç–µ –∫–∞–∫ —Ö–æ—Ç–∏—Ç–µ.",
    "–£–±–∏—Ç—å –í–∞—Å ‚Äî –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏–µ, –º–∏—Å—Ç–µ—Ä –ê–Ω–¥–µ—Ä—Å–æ–Ω.",
    "–ë—ã—Ç—å –ò–∑–±—Ä–∞–Ω–Ω—ã–º –≤—Å—ë —Ä–∞–≤–Ω–æ —á—Ç–æ –±—ã—Ç—å –≤–ª—é–±–ª—ë–Ω–Ω—ã–º. –ù–∏–∫—Ç–æ –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç —Ç–µ–±–µ, —á—Ç–æ —Ç—ã –≤–ª—é–±–ª—ë–Ω. –¢—ã –ø—Ä–æ—Å—Ç–æ –∑–Ω–∞–µ—à—å —ç—Ç–æ.",
    "–î–∞—Ä —É —Ç–µ–±—è –µ—Å—Ç—å, –Ω–æ, –∫–∞–∂–µ—Ç—Å—è, —Ç—ã —á–µ–≥–æ-—Ç–æ –∂–¥—ë—à—å.",
    "–ì–ª–∞–≤–Ω–æ–µ, –Ω–µ –≤–µ—Ä—å –≤—Å—è–∫–æ–π –µ—Ä—É–Ω–¥–µ –Ω–∞—Å—á—ë—Ç —Å—É–¥—å–±—ã. –¢—ã —Ö–æ–∑—è–∏–Ω —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏.",
    "–¢–∞–∫, –ø–æ–ª–æ–∂–µ–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ç–µ—Ö. –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É. –ù–æ —ç—Ç–æ —Ç–æ—Å–∫–∞ –∑–µ–ª—ë–Ω–∞—è. –ö–∞–∫ –Ω–∞—Å—á—ë—Ç –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ–≤–µ—Å–µ–ª–µ–π?",
    "–ú–æ–∂–µ—Ç –º–∞—à–∏–Ω—ã –Ω–µ –∑–Ω–∞–ª–∏ –∫–∞–∫–æ–π –Ω–∞ –≤–∫—É—Å —Ü—ã–ø–ª—ë–Ω–æ–∫, –ø–æ—ç—Ç–æ–º—É —Ü—ã–ø–ª—ë–Ω–æ–∫ –Ω–∞ –≤–∫—É—Å –∫–∞–∫ –≤–æ–æ–±—â–µ –≤—Å—ë.",
    "–≠—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –±–µ–ª–æ–∫ –æ–¥–Ω–æ–∫–ª–µ—Ç–æ—á–Ω—ã—Ö, —Å–º–µ—à–∞–Ω–Ω—ã–π —Å —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –∞–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç–∞–º–∏, –≤–∏—Ç–∞–º–∏–Ω–∞–º–∏ –∏ –º–∏–Ω–µ—Ä–∞–ª—å–Ω—ã–º–∏ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏.",
    "–ù–µ –æ–±—Ä–∞—â–∞–π –≤–Ω–∏–º–∞–Ω–∏—è –Ω–∞ —ç—Ç–∏—Ö –ª–∏—Ü–µ–º–µ—Ä–æ–≤. –ò–Ω—Å—Ç–∏–Ω–∫—Ç—ã –∏ —Å–ª–∞–±–æ—Å—Ç–∏ –∫–∞–∫ —Ä–∞–∑ –∏ –æ—Ç–ª–∏—á–∞—é—Ç –Ω–∞—Å –æ—Ç –º–µ—Ä–∑–∫–∏—Ö –º–∞—à–∏–Ω.",
    "–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ. –ó–∞–∂–≥–ª–∏—Å—å —Ç–∞–±–ª–æ ¬´–ù–µ –∫—É—Ä–∏—Ç—å¬ª –∏ ¬´–ü—Ä–∏—Å—Ç–µ–≥–Ω—É—Ç—å —Ä–µ–º–Ω–∏¬ª. –≠–∫–∏–ø–∞–∂ –∂–µ–ª–∞–µ—Ç –í–∞–º –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—ë—Ç–∞.",
]

message_text_vpn_variants = (
    "‚ìò <b>MatrixVPN üõ°Ô∏è</b> –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n\n"
    "<b>–ê–Ω—Ç–∏–ó–∞–ø—Ä–µ—Ç VPN üîí</b> —Ç—É–Ω–Ω–µ–ª–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã, "
    "–ø—Ä–æ–ø—É—Å–∫–∞—è –æ–±—ã—á–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫ –≤–Ω–µ VPN –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è ‚ö°\n\n"
    "<b>–ì–ª–æ–±–∞–ª—å–Ω—ã–π VPN üåç</b> –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤–µ—Å—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ç—Ä–∞—Ñ–∏–∫ —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, "
    "–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–∞–π—Ç–∞–º –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å üîí\n\n"
    "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –ø—Ä–æ—Ç–æ–∫–æ–ª—ã <b>VLESS</b>, <b>AmneziaWG</b>, <b>WireGuard</b> –∏ <b>OpenVPN</b>."
)

message_text_protos_info = (
    "<b>MatrixVPN üõ°Ô∏è</b> –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö VPN –∏ –ø—Ä–æ–∫—Å–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤:\n\n"
    "<b>üåê VLESS</b> ‚Äî —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏ –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è."
    "–û–Ω –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ–∫—É—é —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ –Ω–∞ —Ç—Ä–∞—Ñ–∏–∫ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏. "
    "<b>VLESS</b> –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –≤–∞–∂–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ñ–µ–¥–∏—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å.\n\n"
    "<b>üõ°Ô∏è AmneziaWG</b> ‚Äî —ç—Ç–æ —É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è <b>WireGuard</b>, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ñ—É—Å–∫–∞—Ü–∏—é —Ç—Ä–∞—Ñ–∏–∫–∞. "
    "–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ç—Ä–∞—Ñ–∏–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–∞–∫ –æ–±—ã—á–Ω—ã–π, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫. "
    "<b>AmneziaWG</b> —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç <b>UDP</b> –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.\n\n"
    "<b>‚ö° WireGuard</b> ‚Äî —ç—Ç–æ –Ω–æ–≤—ã–π –∏ –±—ã—Å—Ç—Ä–æ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–π—Å—è –ø—Ä–æ—Ç–æ–∫–æ–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–µ–ª—è–µ—Ç—Å—è —Å–≤–æ–µ–π –ø—Ä–æ—Å—Ç–æ—Ç–æ–π –∏ –≤—ã—Å–æ–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é. "
    "–û–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ <b>UDP</b>, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∑–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∏ –∏ –ø–æ–≤—ã—Å–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, "
    "–ø—Ä–∏ —ç—Ç–æ–º –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. <b>WireGuard</b> –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ü–µ–Ω–∏—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.\n\n"
    "<b>üîê OpenVPN</b> ‚Äî —ç—Ç–æ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏ –Ω–∞–¥–µ–∂–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –¥–ª—è VPN. "
    "–û–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ —á–µ—Ä–µ–∑ <b>UDP</b>, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ <b>TCP</b>, "
    "—á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –≤—ã–±–æ—Ä–æ–º –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π. "
    "–ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º –ø–∞—Ç—á–∞–º OpenVPN –º–æ–∂–µ—Ç –æ–±—Ö–æ–¥–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤, —á—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ, –µ—Å–ª–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –¥–æ—Å—Ç—É–ø–∞.\n\n"
    "‚ìò –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, <b>MatrixVPN</b> –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ç—É–Ω–Ω–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞, "
    "–æ–±–µ—Å–ø–µ—á–∏–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–∏—Ö –Ω—É–∂–¥. "
    "–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–≤–æ–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π."
)


async def get_protos_menu_markup(
    user_id: int, proto: str
) -> types.InlineKeyboardMarkup:
    # This function will generate the markup for protos_menu
    # It will be called from handlers and potentially other services
    user = await get_user_by_id(user_id)
    if not (user and user[2] == "accepted"):
        return None

    inline_keyboard = [
        [
            types.InlineKeyboardButton(
                text="üîÆ VLESS",
                callback_data=f"{proto}_vless",
            ),
        ],
        [
            types.InlineKeyboardButton(
                text="üïµÔ∏è AmneziaWG",
                callback_data=f"{proto}_amneziawg",
            ),
            types.InlineKeyboardButton(
                text="‚ö° WireGuard",
                callback_data=f"{proto}_wireguard",
            ),
        ],
        [
            types.InlineKeyboardButton(
                text="üõ°Ô∏è OpenVPN",
                callback_data=f"{proto}_openvpn",
            )
        ],
        [
            types.InlineKeyboardButton(
                text="üîç –û VPN –ø—Ä–æ—Ç–æ–∫–æ–ª–∞—Ö",
                callback_data=f"{proto}_about",
            )
        ],
    ]
    if (proto) == "az":
        inline_keyboard.insert(
            0,
            [
                types.InlineKeyboardButton(
                    text="üö® –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ",
                    web_app=types.WebAppInfo(
                        url="https://teletype.in/@esc_matrix/antizapret_warning"
                    ),
                )
            ],
        )
    inline_keyboard.append(
        [
            types.InlineKeyboardButton(
                text="üìú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏",
                callback_data=f"{proto}_faq",
            )
        ]
    )
    inline_keyboard.append(
        [types.InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="vpn_variants")]
    )

    return types.InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def main_menu(call: types.CallbackQuery = None, user_id: int = None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é VPN."""

    user_id = user_id or call.from_user.id

    user = await get_user_by_id(user_id)
    if not (user and user[2] == "accepted"):
        await non_authorized(user_id, call.message.message_id if call else None)
        return

    access_end_date = user[5]

    access_end_date = datetime.fromisoformat(access_end_date)
    current_date = datetime.now(pytz.utc)

    remaining_time = access_end_date - current_date
    remaining_days = remaining_time.days
    remaining_hours = remaining_time.total_seconds() // 3600

    end_date_formatted = format_datetime(
        access_end_date.replace(tzinfo=pytz.utc).astimezone(
            pytz.timezone("Europe/Moscow")
        ),
        "d MMMM yyyy '–≤' HH:mm",
        locale="ru",
    )

    if remaining_days < 3:
        time_text = f"{numeral.get_plural(int(remaining_hours), '—á–∞—Å, —á–∞—Å–∞, —á–∞—Å–æ–≤')}"
    else:
        time_text = f"{numeral.get_plural(remaining_days, '–¥–µ–Ω—å, –¥–Ω—è, –¥–Ω–µ–π')}"

    menu = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(
                    text="üí° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPN", callback_data="vpn_variants"
                ),
            ],
            [
                types.InlineKeyboardButton(
                    text="üéÅ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_data="activate_promo"
                ),
            ],
            [
                types.InlineKeyboardButton(
                    text="üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"
                ),
            ],
            [
                types.InlineKeyboardButton(
                    text="‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url=f"tg://user?id={SUPPORT_ID}"
                ),
            ],
        ]
    )

    caption_text = f"""
‚ìò <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>

<blockquote><b>‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {time_text}
üìÖ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {end_date_formatted}</b></blockquote>

<blockquote><b>üí¨ ¬´{random.choice(quotes)}¬ª</b></blockquote>
"""

    if call:
        try:
            await call.message.edit_media(
                media=types.InputMediaPhoto(
                    media=types.FSInputFile("assets/matrix.png"),
                    caption=caption_text,
                    parse_mode="HTML",
                ),
                reply_markup=menu,
            )
        except TelegramAPIError:
            await bot.send_photo(
                chat_id=user_id,
                photo=types.FSInputFile("assets/matrix.png"),
                caption=caption_text,
                parse_mode="HTML",
                reply_markup=menu,
            )
    else:
        await bot.send_photo(
            chat_id=user_id,
            photo=types.FSInputFile("assets/matrix.png"),
            caption=caption_text,
            parse_mode="HTML",
            reply_markup=menu,
        )
